[package]
name = "swift-mt-message"
version = "2.3.5"
edition = "2024"
exclude = [".DS_Store", "/target", ".vscode", ".github"]
authors = ["Plasmatic Engineering <shankar@goplasmatic.io>"]
license = "Apache-2.0"
description = "A fast, type-safe Rust implementation of SWIFT MT message parsing with comprehensive field support, derive macros, and validation."
readme = "../README.md"
homepage = "https://github.com/GoPlasmatic/SwiftMTMessage"
repository = "https://github.com/GoPlasmatic/SwiftMTMessage"
keywords = ["swift", "mt", "message", "parsing", "macro"]
categories = ["data-structures", "development-tools", "parsing"]

[dependencies]
# Macro crate
swift-mt-message-macros = { version = "2.3.5", path = "../swift-mt-message-macros" }

# Core serialization and parsing
serde = { workspace = true }
serde_json = { workspace = true }
chrono = { workspace = true }

# Error handling and utilities
thiserror = { workspace = true }
regex = { workspace = true }
once_cell = { workspace = true }

# Data validation
datalogic-rs = { workspace = true }

# Random number generation for sample data
rand = { workspace = true }

# UUID generation for realistic UETR
uuid = { workspace = true }

[dev-dependencies]
pretty_assertions = "1.4"

[[example]]
name = "parse_mt103"
path = "../examples/parse_mt103.rs" 

[[example]]
name = "parse_mt202"
path = "../examples/parse_mt202.rs"

[[example]]
name = "parse_auto"
path = "../examples/parse_auto.rs"

[[example]]
name = "json_to_mt_example"
path = "../examples/json_to_mt_example.rs"

[[example]]
name = "sample_generation"
path = "../examples/sample_generation.rs"

[[example]]
name = "simple_sample_test"
path = "../examples/simple_sample_test.rs"

[[example]]
name = "json_config_sample_generation"
path = "../examples/json_config_sample_generation.rs"
